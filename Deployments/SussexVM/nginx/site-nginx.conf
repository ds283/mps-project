# app upstream is the dockerized waitress server
upstream web {
    ip_hash;
    server web1:5000;
    server web2:5000;
}

# upstream flower is the dockerized flower instance
upstream flower {
    ip_hash;
    server flower:5000;
}

# portal: https
server {

    location / {
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://web;
            break;
        }
    }

    location /flower {
        rewrite ^/flower/(.*)$ /$1 break;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_pass http://flower;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        auth_basic "Restricted";
        auth_basic_user_file "/admin_passwords.pwd";
    }

    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }

    listen 8443 ssl http2;
    server_name mpsprojects.sussex.ac.uk;

    ssl on;
    ssl_certificate "/its/home/docker/certificates-2020/certbundle.crt";
    ssl_certificate_key "/its/home/docker/certificates-2020/mpsprojects.sussex.ac.uk.key";
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP;
    ssl_prefer_server_ciphers on;
}

# portal: http
server {

    listen 8000;
    server_name mpsprojects.sussex.ac.uk;
    return 302 https://$server_name$request_uri;

}
