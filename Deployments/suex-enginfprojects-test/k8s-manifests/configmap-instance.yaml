apiVersion: v1
kind: ConfigMap
metadata:
  name: enginfprojects-instance
  namespace: suex-enginfprojects-test
data:
  local.py: |
    import os

    from app.shared.cloud_object_store import ObjectStore
    import app.shared.cloud_object_store.bucket_types as buckets

    APP_NAME = 'enginfprojects'

    PREFERRED_URL_SCHEME = 'https'

    BACKUP_IS_LIVE = True
    EMAIL_IS_LIVE = True

    OBJECT_STORAGE_ENDPOINT_URL = os.environ.get("OBJECT_STORAGE_ENDPOINT_URL")
    OBJECT_STORAGE_REGION = os.environ.get("OBJECT_STORAGE_REGION")

    _base_storage_options = {'endpoint_url': OBJECT_STORAGE_ENDPOINT_URL,
                             'region': OBJECT_STORAGE_REGION}

    OBJECT_STORAGE_ASSETS_ACCESS_KEY = os.environ.get("OBJECT_STORAGE_ASSETS_ACCESS_KEY")
    OBJECT_STORAGE_ASSETS_SECRET_KEY = os.environ.get("OBJECT_STORAGE_ASSETS_SECRET_KEY")

    _assets_storage_options = _base_storage_options | {'access_key': OBJECT_STORAGE_ASSETS_ACCESS_KEY,
                                                       'secret_key': OBJECT_STORAGE_ASSETS_SECRET_KEY}

    OBJECT_STORAGE_BACKUP_ACCESS_KEY = os.environ.get("OBJECT_STORAGE_BACKUP_ACCESS_KEY")
    OBJECT_STORAGE_BACKUP_SECRET_KEY = os.environ.get("OBJECT_STORAGE_BACKUP_SECRET_KEY")

    _backup_storage_options = _base_storage_options | {'access_key': OBJECT_STORAGE_BACKUP_ACCESS_KEY,
                                                       'secret_key': OBJECT_STORAGE_BACKUP_SECRET_KEY}

    OBJECT_STORAGE_ASSETS_URI = os.environ.get("OBJECT_STORAGE_ASSETS_URI")
    OBJECT_STORAGE_ASSETS = ObjectStore(OBJECT_STORAGE_ASSETS_URI, buckets.ASSETS_BUCKET, _assets_storage_options)

    OBJECT_STORAGE_BACKUP_URI = os.environ.get("OBJECT_STORAGE_BACKUP_URI")
    OBJECT_STORAGE_BACKUP = ObjectStore(OBJECT_STORAGE_BACKUP_URI, buckets.BACKUP_BUCKET, _backup_storage_options)

    BRANDING_LABEL = 'EngInf projects portal'
    BRANDING_LOGIN_LANDING_STRING = 'Welcome to the Engineering & Informatics projects portal (sandbox cluster)'
    BRANDING_PUBLIC_LANDING_STRING = 'Welcome to the Engineering & Informatics public projects list (sandbox cluster)'

    ENABLE_PUBLIC_BROWSER = False
  initdb.py: |
    import os

    from app.shared.cloud_object_store import ObjectStore
    import app.shared.cloud_object_store.bucket_types as buckets

    INITDB_STORAGE_ENDPOINT_URL = os.environ.get("INITDB_STORAGE_ENDPOINT_URL")
    INITDB_STORAGE_REGION = os.environ.get("INITDB_STORAGE_REGION")

    _storage_options = {'endpoint_url': INITDB_STORAGE_ENDPOINT_URL,
                        'region': INITDB_STORAGE_REGION,
                        'compressed': False}

    INITDB_STORAGE_ACCESS_KEY = os.environ.get("INITDB_STORAGE_ACCESS_KEY")
    INITDB_STORAGE_SECRET_KEY = os.environ.get("INITDB_STORAGE_SECRET_KEY")

    _storage_options = _storage_options | {'access_key': INITDB_STORAGE_ACCESS_KEY,
                                           'secret_key': INITDB_STORAGE_SECRET_KEY}

    INITDB_BUCKET_URI = os.environ.get("INITDB_STORAGE_BUCKET_URI")
    INITDB_BUCKET = ObjectStore(INITDB_BUCKET_URI, buckets.INITDB_BUCKET, _storage_options)
    INITDB_TARFILE = None
