"""Add models to support attendance monitoring

Revision ID: 1058f9cd03ea
Revises: d13e9f215837
Create Date: 2024-01-16 11:55:20.881572

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1058f9cd03ea'
down_revision = 'd13e9f215837'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('submission_period_units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['submission_periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supervision_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('attendance', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['submission_roles.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['submission_period_units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supervision_event_emails',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('email_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['email_id'], ['email_log.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['supervision_events.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'email_id')
    )
    op.create_table('supervision_event_reminders',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('email_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['email_id'], ['email_log.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['supervision_events.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'email_id')
    )
    op.create_table('supervision_event_roles',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('submission_role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['supervision_events.id'], ),
    sa.ForeignKeyConstraint(['submission_role_id'], ['submission_roles.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'submission_role_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('fs_uniquifier',
               existing_type=mysql.VARCHAR(charset='utf8', collation='utf8_bin', length=64),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('fs_uniquifier',
               existing_type=mysql.VARCHAR(charset='utf8', collation='utf8_bin', length=64),
               nullable=True)

    op.drop_table('supervision_event_roles')
    op.drop_table('supervision_event_reminders')
    op.drop_table('supervision_event_emails')
    op.drop_table('supervision_events')
    op.drop_table('submission_period_units')
    # ### end Alembic commands ###
