"""Add FeedbackAsset and ProjectAsset asset types

Revision ID: 77177a5f44d8
Revises: b7422f58ae04
Create Date: 2025-06-30 12:59:50.043331

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '77177a5f44d8'
down_revision = 'b7422f58ae04'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedback_assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('license_id', sa.Integer(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('mimetype', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('target_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('unique_name', sa.String(length=255, collation='utf8_bin'), nullable=False),
    sa.Column('filesize', sa.Integer(), nullable=True),
    sa.Column('lost', sa.Boolean(), nullable=False),
    sa.Column('unattached', sa.Boolean(), nullable=False),
    sa.Column('bucket', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('encryption', sa.Integer(), nullable=False),
    sa.Column('encrypted_size', sa.Integer(), nullable=True),
    sa.Column('nonce', sa.String(length=255), nullable=True),
    sa.Column('compressed', sa.Boolean(), nullable=False),
    sa.Column('compressed_size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['license_id'], ['asset_licenses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nonce'),
    sa.UniqueConstraint('unique_name')
    )
    with op.batch_alter_table('feedback_assets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_feedback_assets_timestamp'), ['timestamp'], unique=False)

    op.create_table('project_assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('license_id', sa.Integer(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('mimetype', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('target_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('unique_name', sa.String(length=255, collation='utf8_bin'), nullable=False),
    sa.Column('filesize', sa.Integer(), nullable=True),
    sa.Column('lost', sa.Boolean(), nullable=False),
    sa.Column('unattached', sa.Boolean(), nullable=False),
    sa.Column('bucket', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('encryption', sa.Integer(), nullable=False),
    sa.Column('encrypted_size', sa.Integer(), nullable=True),
    sa.Column('nonce', sa.String(length=255), nullable=True),
    sa.Column('compressed', sa.Boolean(), nullable=False),
    sa.Column('compressed_size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['license_id'], ['asset_licenses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nonce'),
    sa.UniqueConstraint('unique_name')
    )
    with op.batch_alter_table('project_assets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_assets_timestamp'), ['timestamp'], unique=False)

    op.create_table('acl_feedback',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['feedback_assets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'user_id')
    )
    op.create_table('acl_project',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['project_assets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'user_id')
    )
    op.create_table('acr_feedback',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['feedback_assets.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'role_id')
    )
    op.create_table('acr_project',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['project_assets.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'role_id')
    )
    op.create_table('feedback_downloads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.Column('downloader_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['feedback_assets.id'], ),
    sa.ForeignKeyConstraint(['downloader_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('feedback_downloads', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_feedback_downloads_timestamp'), ['timestamp'], unique=False)

    op.create_table('project_downloads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.Column('downloader_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['project_assets.id'], ),
    sa.ForeignKeyConstraint(['downloader_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('project_downloads', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_downloads_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('project_downloads', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_downloads_timestamp'))

    op.drop_table('project_downloads')
    with op.batch_alter_table('feedback_downloads', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_feedback_downloads_timestamp'))

    op.drop_table('feedback_downloads')
    op.drop_table('acr_project')
    op.drop_table('acr_feedback')
    op.drop_table('acl_project')
    op.drop_table('acl_feedback')
    with op.batch_alter_table('project_assets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_assets_timestamp'))

    op.drop_table('project_assets')
    with op.batch_alter_table('feedback_assets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_feedback_assets_timestamp'))

    op.drop_table('feedback_assets')
    # ### end Alembic commands ###
