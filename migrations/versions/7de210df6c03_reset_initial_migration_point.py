"""Reset initial migration point

Revision ID: 7de210df6c03
Revises:
Create Date: 2023-07-03 23:49:53.023539

"""
from alembic import op
import sqlalchemy as sa
import flask_security
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '7de210df6c03'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backup_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('keep_hourly', sa.Integer(), nullable=True),
    sa.Column('keep_daily', sa.Integer(), nullable=True),
    sa.Column('limit', sa.Integer(), nullable=True),
    sa.Column('units', sa.Integer(), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('celery_id', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('celery_finished', sa.Boolean(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('converted', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('total_lines', sa.Integer(), nullable=True),
    sa.Column('interpreted_lines', sa.Integer(), nullable=True),
    sa.Column('trust_cohort', sa.Boolean(), nullable=True),
    sa.Column('trust_registration', sa.Boolean(), nullable=True),
    sa.Column('ignore_Y0', sa.Boolean(), nullable=True),
    sa.Column('academic_year', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('batch_student', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_batch_student_name'), ['name'], unique=False)

    op.create_table('celery_crontabs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('minute', sa.String(length=64), nullable=True),
    sa.Column('hour', sa.String(length=64), nullable=True),
    sa.Column('day_of_week', sa.String(length=64), nullable=True),
    sa.Column('day_of_month', sa.String(length=64), nullable=True),
    sa.Column('month_of_year', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_intervals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('every', sa.Integer(), nullable=False),
    sa.Column('period', sa.String(length=24), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('send_date', sa.DateTime(), nullable=True),
    sa.Column('subject', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('html', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('email_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_email_log_send_date'), ['send_date'], unique=False)

    op.create_table('main_config',
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('canvas_url', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('enable_canvas_sync', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('year')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('description', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('permissions', flask_security.datastore.AsaList(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('temporary_assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('filename', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('filesize', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('temporary_assets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_temporary_assets_timestamp'), ['timestamp'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('username', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('password', sa.String(length=255, collation='utf8_bin'), nullable=False),
    sa.Column('first_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('last_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=60), nullable=True),
    sa.Column('current_login_ip', sa.String(length=60), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=64), nullable=False),
    sa.Column('fs_webauthn_user_handle', sa.String(length=64), nullable=True),
    sa.Column('last_email', sa.DateTime(), nullable=True),
    sa.Column('group_summaries', sa.Boolean(), nullable=False),
    sa.Column('summary_frequency', sa.Integer(), nullable=False),
    sa.Column('default_license_id', sa.Integer(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('last_precompute', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['default_license_id'], ['asset_licenses.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fs_uniquifier'),
    sa.UniqueConstraint('fs_webauthn_user_handle')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('acl_temporary',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['temporary_assets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'user_id')
    )
    op.create_table('acr_temporary',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['temporary_assets.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'role_id')
    )
    op.create_table('asset_licenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('abbreviation', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('version', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('url', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('allows_redistribution', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('backups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('filename', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('db_size', sa.BigInteger(), nullable=True),
    sa.Column('archive_size', sa.BigInteger(), nullable=True),
    sa.Column('backup_size', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('backups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backups_date'), ['date'], unique=False)

    op.create_table('buildings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('buildings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_buildings_name'), ['name'], unique=True)

    op.create_table('celery_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('task', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('interval_id', sa.Integer(), nullable=True),
    sa.Column('crontab_id', sa.Integer(), nullable=True),
    sa.Column('arguments', sa.String(length=255), nullable=True),
    sa.Column('keyword_arguments', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('queue', sa.String(length=255), nullable=True),
    sa.Column('exchange', sa.String(length=255), nullable=True),
    sa.Column('routing_key', sa.String(length=255), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('last_run_at', sa.DateTime(), nullable=True),
    sa.Column('total_run_count', sa.Integer(), nullable=True),
    sa.Column('date_changed', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['crontab_id'], ['celery_crontabs.id'], ),
    sa.ForeignKeyConstraint(['interval_id'], ['celery_intervals.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('convenor_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255, collation='utf8_bin'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('blocking', sa.Boolean(), nullable=True),
    sa.Column('complete', sa.Boolean(), nullable=True),
    sa.Column('dropped', sa.Boolean(), nullable=True),
    sa.Column('defer_date', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('convenor_tasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_convenor_tasks_defer_date'), ['defer_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_convenor_tasks_due_date'), ['due_date'], unique=False)

    op.create_table('degree_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('abbreviation', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('degree_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_degree_types_abbreviation'), ['abbreviation'], unique=True)
        batch_op.create_index(batch_op.f('ix_degree_types_name'), ['name'], unique=True)

    op.create_table('email_log_recipients',
    sa.Column('email_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['email_id'], ['email_log.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('email_id', 'recipient_id')
    )
    op.create_table('email_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.Integer(), nullable=True),
    sa.Column('data_1', sa.Integer(), nullable=True),
    sa.Column('data_2', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('held', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faculty_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('academic_title', sa.Integer(), nullable=True),
    sa.Column('use_academic_title', sa.Boolean(), nullable=True),
    sa.Column('office', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('sign_off_students', sa.Boolean(), nullable=True),
    sa.Column('project_capacity', sa.Integer(), nullable=True),
    sa.Column('enforce_capacity', sa.Boolean(), nullable=True),
    sa.Column('show_popularity', sa.Boolean(), nullable=True),
    sa.Column('dont_clash_presentations', sa.Boolean(), nullable=True),
    sa.Column('CATS_supervision', sa.Integer(), nullable=True),
    sa.Column('CATS_marking', sa.Integer(), nullable=True),
    sa.Column('CATS_moderation', sa.Integer(), nullable=True),
    sa.Column('CATS_presentation', sa.Integer(), nullable=True),
    sa.Column('canvas_API_token', sqlalchemy_utils.types.encrypted.encrypted_type.EncryptedType(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fheq_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('short_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('numeric_level', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('numeric_level'),
    sa.UniqueConstraint('short_name')
    )
    op.create_table('formatted_articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('article', sa.Text(), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('publication_timestamp', sa.DateTime(), nullable=True),
    sa.Column('publish_on', sa.DateTime(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matching_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('show_students', sa.Boolean(), nullable=True),
    sa.Column('show_faculty', sa.Boolean(), nullable=True),
    sa.Column('show_login', sa.Boolean(), nullable=True),
    sa.Column('dismissible', sa.Boolean(), nullable=True),
    sa.Column('title', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_messages_issue_date'), ['issue_date'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('uuid', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.Column('remove_on_pageload', sa.Boolean(), nullable=True),
    sa.Column('payload_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notifications_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_uuid'), ['uuid'], unique=False)

    op.create_table('presentation_assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('requested_availability', sa.Boolean(), nullable=True),
    sa.Column('availability_closed', sa.Boolean(), nullable=True),
    sa.Column('availability_deadline', sa.Date(), nullable=True),
    sa.Column('skip_availability', sa.Boolean(), nullable=True),
    sa.Column('availability_skipped_id', sa.Integer(), nullable=True),
    sa.Column('availability_skipped_timestamp', sa.DateTime(), nullable=True),
    sa.Column('feedback_open', sa.Boolean(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['availability_skipped_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['year'], ['main_config.year'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('project_tag_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('add_group', sa.Boolean(), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('research_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('abbreviation', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('website', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('research_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_research_groups_abbreviation'), ['abbreviation'], unique=True)

    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('roles_users_masked',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('skill_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('add_group', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('skill_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_skill_groups_name'), ['name'], unique=True)

    op.create_table('supervision_team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('abbreviation', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('supervision_team', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_supervision_team_abbreviation'), ['abbreviation'], unique=True)

    op.create_table('tasks',
    sa.Column('id', sa.String(length=255, collation='utf8_bin'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('description', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tasks_name'), ['name'], unique=False)

    op.create_table('assessor_attendance_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmed_timestamp', sa.DateTime(), nullable=True),
    sa.Column('assigned_limit', sa.Integer(), nullable=True),
    sa.Column('request_email_sent', sa.Boolean(), nullable=True),
    sa.Column('request_timestamp', sa.DateTime(), nullable=True),
    sa.Column('reminder_email_sent', sa.Boolean(), nullable=True),
    sa.Column('last_reminder_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['presentation_assessments.id'], ),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('degree_programmes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('abbreviation', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('show_type', sa.Boolean(), nullable=True),
    sa.Column('foundation_year', sa.Boolean(), nullable=True),
    sa.Column('year_out', sa.Boolean(), nullable=True),
    sa.Column('year_out_value', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('course_code', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['degree_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('degree_programmes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_degree_programmes_abbreviation'), ['abbreviation'], unique=False)
        batch_op.create_index(batch_op.f('ix_degree_programmes_course_code'), ['course_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_degree_programmes_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_degree_programmes_type_id'), ['type_id'], unique=False)

    op.create_table('faculty_affiliations',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['research_groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['faculty_data.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('message_dismissals',
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('message_id', 'user_id')
    )
    op.create_table('modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('first_taught', sa.Integer(), nullable=True),
    sa.Column('last_taught', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['fheq_levels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('modules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_modules_code'), ['code'], unique=True)

    op.create_table('presentation_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('session_type', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['presentation_assessments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('abbreviation', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('publish', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('use_project_hub', sa.Boolean(), nullable=True),
    sa.Column('student_level', sa.Integer(), nullable=True),
    sa.Column('is_optional', sa.Boolean(), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('extent', sa.Integer(), nullable=True),
    sa.Column('uses_selection', sa.Integer(), nullable=True),
    sa.Column('select_in_previous_cycle', sa.Boolean(), nullable=True),
    sa.Column('uses_submission', sa.Integer(), nullable=True),
    sa.Column('uses_supervisor', sa.Boolean(), nullable=True),
    sa.Column('uses_marker', sa.Boolean(), nullable=True),
    sa.Column('uses_moderator', sa.Boolean(), nullable=True),
    sa.Column('display_marker', sa.Boolean(), nullable=True),
    sa.Column('uses_presentations', sa.Boolean(), nullable=True),
    sa.Column('display_presentations', sa.Boolean(), nullable=True),
    sa.Column('initial_choices', sa.Integer(), nullable=True),
    sa.Column('switch_choices', sa.Integer(), nullable=True),
    sa.Column('faculty_maximum', sa.Integer(), nullable=True),
    sa.Column('selection_open_to_all', sa.Boolean(), nullable=True),
    sa.Column('auto_enrol_enable', sa.Boolean(), nullable=True),
    sa.Column('auto_enroll_years', sa.Integer(), nullable=True),
    sa.Column('advertise_research_group', sa.Boolean(), nullable=True),
    sa.Column('use_project_tags', sa.Boolean(), nullable=True),
    sa.Column('card_text_optional', sa.Text(), nullable=True),
    sa.Column('card_text_normal', sa.Text(), nullable=True),
    sa.Column('card_text_noninitial', sa.Text(), nullable=True),
    sa.Column('email_text_draft_match_preamble', sa.Text(), nullable=True),
    sa.Column('email_text_final_match_preamble', sa.Text(), nullable=True),
    sa.Column('require_confirm', sa.Boolean(), nullable=True),
    sa.Column('supervisor_carryover', sa.Boolean(), nullable=True),
    sa.Column('include_available', sa.Boolean(), nullable=True),
    sa.Column('keep_hourly_popularity', sa.Integer(), nullable=True),
    sa.Column('keep_daily_popularity', sa.Integer(), nullable=True),
    sa.Column('CATS_supervision', sa.Integer(), nullable=True),
    sa.Column('CATS_marking', sa.Integer(), nullable=True),
    sa.Column('CATS_moderation', sa.Integer(), nullable=True),
    sa.Column('CATS_presentation', sa.Integer(), nullable=True),
    sa.Column('do_matching', sa.Boolean(), nullable=True),
    sa.Column('number_assessors', sa.Integer(), nullable=True),
    sa.Column('convenor_id', sa.Integer(), nullable=True),
    sa.Column('reenroll_supervisors_early', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['convenor_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('project_classes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_classes_abbreviation'), ['abbreviation'], unique=True)
        batch_op.create_index(batch_op.f('ix_project_classes_convenor_id'), ['convenor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_project_classes_name'), ['name'], unique=True)

    op.create_table('project_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('colour', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['project_tag_groups.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('default_id', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('generic', sa.Boolean(), nullable=True),
    sa.Column('meeting_reqd', sa.Integer(), nullable=True),
    sa.Column('enforce_capacity', sa.Boolean(), nullable=True),
    sa.Column('dont_clash_presentations', sa.Boolean(), nullable=True),
    sa.Column('show_popularity', sa.Boolean(), nullable=True),
    sa.Column('show_selections', sa.Boolean(), nullable=True),
    sa.Column('show_bookmarks', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['default_id'], ['descriptions.id'], use_alter=True),
    sa.ForeignKeyConstraint(['group_id'], ['research_groups.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['faculty_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_projects_group_id'), ['group_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_projects_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_projects_owner_id'), ['owner_id'], unique=False)

    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('lecture_capture', sa.Boolean(), nullable=True),
    sa.Column('maximum_occupancy', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rooms_name'), ['name'], unique=True)

    op.create_table('submitted_assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uploaded_id', sa.Integer(), nullable=True),
    sa.Column('license_id', sa.Integer(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('mimetype', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('target_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('filename', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('filesize', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['license_id'], ['asset_licenses.id'], ),
    sa.ForeignKeyConstraint(['uploaded_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('submitted_assets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_submitted_assets_timestamp'), ['timestamp'], unique=False)

    op.create_table('transferable_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['skill_groups.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transferable_skills', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transferable_skills_name'), ['name'], unique=False)

    op.create_table('acl_submitted',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['submitted_assets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'user_id')
    )
    op.create_table('acr_submitted',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['submitted_assets.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'role_id')
    )
    op.create_table('approvals_team',
    sa.Column('project_class_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_class_id'], ['project_classes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('project_class_id', 'user_id')
    )
    op.create_table('assessor_available',
    sa.Column('assessor_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessor_id'], ['assessor_attendance_data.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['presentation_sessions.id'], ),
    sa.PrimaryKeyConstraint('assessor_id', 'session_id')
    )
    op.create_table('assessor_ifneeded',
    sa.Column('assessor_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessor_id'], ['assessor_attendance_data.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['presentation_sessions.id'], ),
    sa.PrimaryKeyConstraint('assessor_id', 'session_id')
    )
    op.create_table('assessor_unavailable',
    sa.Column('assessor_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessor_id'], ['assessor_attendance_data.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['presentation_sessions.id'], ),
    sa.PrimaryKeyConstraint('assessor_id', 'session_id')
    )
    op.create_table('descriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('label', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmed_id', sa.Integer(), nullable=True),
    sa.Column('confirmed_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reading', sa.Text(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('aims', sa.Text(), nullable=True),
    sa.Column('review_only', sa.Boolean(), nullable=True),
    sa.Column('workflow_state', sa.Integer(), nullable=True),
    sa.Column('validated_timestamp', sa.DateTime(), nullable=True),
    sa.Column('validator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['confirmed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['validator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrollment_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pclass_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('supervisor_state', sa.Integer(), nullable=True),
    sa.Column('supervisor_comment', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('supervisor_reenroll', sa.Integer(), nullable=True),
    sa.Column('marker_state', sa.Integer(), nullable=True),
    sa.Column('marker_comment', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('marker_reenroll', sa.Integer(), nullable=True),
    sa.Column('moderator_state', sa.Integer(), nullable=True),
    sa.Column('moderator_comment', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('moderator_reenroll', sa.Integer(), nullable=True),
    sa.Column('presentations_state', sa.Integer(), nullable=True),
    sa.Column('presentations_comment', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('presentations_reenroll', sa.Integer(), nullable=True),
    sa.Column('CATS_supervision', sa.Integer(), nullable=True),
    sa.Column('CATS_marking', sa.Integer(), nullable=True),
    sa.Column('CATS_moderation', sa.Integer(), nullable=True),
    sa.Column('CATS_presentation', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['pclass_id'], ['project_classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('enrollment_record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_enrollment_record_marker_state'), ['marker_state'], unique=False)
        batch_op.create_index(batch_op.f('ix_enrollment_record_moderator_state'), ['moderator_state'], unique=False)
        batch_op.create_index(batch_op.f('ix_enrollment_record_presentations_state'), ['presentations_state'], unique=False)
        batch_op.create_index(batch_op.f('ix_enrollment_record_supervisor_state'), ['supervisor_state'], unique=False)

    op.create_table('force_tag_groups',
    sa.Column('project_class_id', sa.Integer(), nullable=False),
    sa.Column('tag_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_class_id'], ['project_classes.id'], ),
    sa.ForeignKeyConstraint(['tag_group_id'], ['project_tag_groups.id'], ),
    sa.PrimaryKeyConstraint('project_class_id', 'tag_group_id')
    )
    op.create_table('generated_assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_asset_id', sa.Integer(), nullable=True),
    sa.Column('license_id', sa.Integer(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('mimetype', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('target_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('filename', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('filesize', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['license_id'], ['asset_licenses.id'], ),
    sa.ForeignKeyConstraint(['parent_asset_id'], ['submitted_assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('generated_assets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_generated_assets_timestamp'), ['timestamp'], unique=False)

    op.create_table('last_view_projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('last_viewed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('last_view_projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_last_view_projects_last_viewed'), ['last_viewed'], unique=False)

    op.create_table('office_contacts',
    sa.Column('project_class_id', sa.Integer(), nullable=False),
    sa.Column('office_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['office_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_class_id'], ['project_classes.id'], ),
    sa.PrimaryKeyConstraint('project_class_id', 'office_id')
    )
    op.create_table('period_definitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('number_markers', sa.Integer(), nullable=True),
    sa.Column('number_moderators', sa.Integer(), nullable=True),
    sa.Column('has_presentation', sa.Boolean(), nullable=True),
    sa.Column('lecture_capture', sa.Boolean(), nullable=True),
    sa.Column('number_assessors', sa.Integer(), nullable=True),
    sa.Column('max_group_size', sa.Integer(), nullable=True),
    sa.Column('morning_session', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('afternoon_session', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('talk_format', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('collect_presentation_feedback', sa.Boolean(), nullable=True),
    sa.Column('collect_project_feedback', sa.Boolean(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['project_classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('programmes_to_modules',
    sa.Column('programme_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['programme_id'], ['degree_programmes.id'], ),
    sa.PrimaryKeyConstraint('programme_id', 'module_id')
    )
    op.create_table('project_class_coconvenors',
    sa.Column('project_class_id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['project_class_id'], ['project_classes.id'], ),
    sa.PrimaryKeyConstraint('project_class_id', 'faculty_id')
    )
    op.create_table('project_class_to_messages',
    sa.Column('project_class_id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['project_class_id'], ['project_classes.id'], ),
    sa.PrimaryKeyConstraint('project_class_id', 'message_id')
    )
    op.create_table('project_class_to_programmes',
    sa.Column('project_class_id', sa.Integer(), nullable=False),
    sa.Column('programme_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['programme_id'], ['degree_programmes.id'], ),
    sa.ForeignKeyConstraint(['project_class_id'], ['project_classes.id'], ),
    sa.PrimaryKeyConstraint('project_class_id', 'programme_id')
    )
    op.create_table('project_to_assessors',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'faculty_id')
    )
    op.create_table('project_to_classes',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('project_class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_class_id'], ['project_classes.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'project_class_id')
    )
    op.create_table('project_to_programmes',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('programme_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['programme_id'], ['degree_programmes.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'programme_id')
    )
    op.create_table('project_to_skills',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['transferable_skills.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'skill_id')
    )
    op.create_table('project_to_supervisors',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'faculty_id')
    )
    op.create_table('project_to_tags',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['project_tags.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'tag_id')
    )
    op.create_table('session_to_rooms',
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['presentation_sessions.id'], ),
    sa.PrimaryKeyConstraint('session_id', 'room_id')
    )
    op.create_table('student_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_number', sa.Integer(), nullable=True),
    sa.Column('exam_number', sqlalchemy_utils.types.encrypted.encrypted_type.EncryptedType(), nullable=True),
    sa.Column('cohort', sa.Integer(), nullable=True),
    sa.Column('programme_id', sa.Integer(), nullable=True),
    sa.Column('foundation_year', sa.Boolean(), nullable=True),
    sa.Column('repeated_years', sa.Integer(), nullable=True),
    sa.Column('intermitting', sa.Boolean(), nullable=True),
    sa.Column('academic_year', sa.Integer(), nullable=True),
    sa.Column('dyspraxia_sticker', sa.Boolean(), nullable=False),
    sa.Column('dyslexia_sticker', sa.Boolean(), nullable=False),
    sa.Column('workflow_state', sa.Integer(), nullable=True),
    sa.Column('validated_timestamp', sa.DateTime(), nullable=True),
    sa.Column('validator_id', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['programme_id'], ['degree_programmes.id'], ),
    sa.ForeignKeyConstraint(['validator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('registration_number')
    )
    with op.batch_alter_table('student_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_data_cohort'), ['cohort'], unique=False)

    op.create_table('submitted_downloads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.Column('downloader_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['submitted_assets.id'], ),
    sa.ForeignKeyConstraint(['downloader_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('submitted_downloads', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_submitted_downloads_timestamp'), ['timestamp'], unique=False)

    op.create_table('acl_generated',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['generated_assets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'user_id')
    )
    op.create_table('acr_generated',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['generated_assets.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'role_id')
    )
    op.create_table('batch_student_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('existing_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('first_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('last_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('email', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('registration_number', sa.Integer(), nullable=True),
    sa.Column('cohort', sa.Integer(), nullable=True),
    sa.Column('programme_id', sa.Integer(), nullable=True),
    sa.Column('foundation_year', sa.Boolean(), nullable=True),
    sa.Column('repeated_years', sa.Integer(), nullable=True),
    sa.Column('intermitting', sa.Boolean(), nullable=True),
    sa.Column('dont_convert', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['existing_id'], ['student_data.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['batch_student.id'], ),
    sa.ForeignKeyConstraint(['programme_id'], ['degree_programmes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('description_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('visibility', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['descriptions.id'], ),
    sa.ForeignKeyConstraint(['year'], ['main_config.year'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('description_comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_description_comments_creation_timestamp'), ['creation_timestamp'], unique=False)

    op.create_table('description_to_modules',
    sa.Column('description_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['description_id'], ['descriptions.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('description_id', 'module_id')
    )
    op.create_table('description_to_pclasses',
    sa.Column('description_id', sa.Integer(), nullable=False),
    sa.Column('project_class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['description_id'], ['descriptions.id'], ),
    sa.ForeignKeyConstraint(['project_class_id'], ['project_classes.id'], ),
    sa.PrimaryKeyConstraint('description_id', 'project_class_id')
    )
    op.create_table('description_to_supervisors',
    sa.Column('description_id', sa.Integer(), nullable=False),
    sa.Column('supervisor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['description_id'], ['descriptions.id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervision_team.id'], ),
    sa.PrimaryKeyConstraint('description_id', 'supervisor_id')
    )
    op.create_table('generated_downloads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.Column('downloader_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['generated_assets.id'], ),
    sa.ForeignKeyConstraint(['downloader_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('generated_downloads', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_generated_downloads_timestamp'), ['timestamp'], unique=False)

    op.create_table('matching_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('selected', sa.Boolean(), nullable=True),
    sa.Column('base_id', sa.Integer(), nullable=True),
    sa.Column('base_bias', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('force_base', sa.Boolean(), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('include_only_submitted', sa.Boolean(), nullable=True),
    sa.Column('ignore_per_faculty_limits', sa.Boolean(), nullable=True),
    sa.Column('ignore_programme_prefs', sa.Boolean(), nullable=True),
    sa.Column('years_memory', sa.Integer(), nullable=True),
    sa.Column('supervising_limit', sa.Integer(), nullable=True),
    sa.Column('marking_limit', sa.Integer(), nullable=True),
    sa.Column('max_marking_multiplicity', sa.Integer(), nullable=True),
    sa.Column('max_different_group_projects', sa.Integer(), nullable=True),
    sa.Column('max_different_all_projects', sa.Integer(), nullable=True),
    sa.Column('use_hints', sa.Boolean(), nullable=True),
    sa.Column('encourage_bias', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('discourage_bias', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('strong_encourage_bias', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('strong_discourage_bias', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('require_to_encourage', sa.Boolean(), nullable=True),
    sa.Column('forbid_to_discourage', sa.Boolean(), nullable=True),
    sa.Column('programme_bias', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('bookmark_bias', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('levelling_bias', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('intra_group_tension', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('supervising_pressure', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('marking_pressure', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('CATS_violation_penalty', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('no_assignment_penalty', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('mean_CATS_per_project', sa.Numeric(precision=8, scale=5), nullable=True),
    sa.Column('draft_to_selectors', sa.DateTime(), nullable=True),
    sa.Column('draft_to_supervisors', sa.DateTime(), nullable=True),
    sa.Column('final_to_selectors', sa.DateTime(), nullable=True),
    sa.Column('final_to_supervisors', sa.DateTime(), nullable=True),
    sa.Column('outcome', sa.Integer(), nullable=True),
    sa.Column('solver', sa.Integer(), nullable=True),
    sa.Column('construct_time', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('compute_time', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('celery_id', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('awaiting_upload', sa.Boolean(), nullable=True),
    sa.Column('finished', sa.Boolean(), nullable=True),
    sa.Column('celery_finished', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('lp_file_id', sa.Integer(), nullable=True),
    sa.Column('mps_file_id', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['base_id'], ['matching_attempts.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lp_file_id'], ['generated_assets.id'], ),
    sa.ForeignKeyConstraint(['mps_file_id'], ['generated_assets.id'], ),
    sa.ForeignKeyConstraint(['year'], ['main_config.year'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('scheduling_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('tag', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('deployed', sa.Boolean(), nullable=True),
    sa.Column('assessor_assigned_limit', sa.Integer(), nullable=True),
    sa.Column('if_needed_cost', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('levelling_tension', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('all_assessors_in_pool', sa.Integer(), nullable=True),
    sa.Column('ignore_coscheduling', sa.Boolean(), nullable=True),
    sa.Column('assessor_multiplicity_per_session', sa.Integer(), nullable=True),
    sa.Column('draft_to_submitters', sa.DateTime(), nullable=True),
    sa.Column('draft_to_assessors', sa.DateTime(), nullable=True),
    sa.Column('final_to_submitters', sa.DateTime(), nullable=True),
    sa.Column('final_to_assessors', sa.DateTime(), nullable=True),
    sa.Column('outcome', sa.Integer(), nullable=True),
    sa.Column('solver', sa.Integer(), nullable=True),
    sa.Column('construct_time', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('compute_time', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('celery_id', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('awaiting_upload', sa.Boolean(), nullable=True),
    sa.Column('finished', sa.Boolean(), nullable=True),
    sa.Column('celery_finished', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('lp_file_id', sa.Integer(), nullable=True),
    sa.Column('mps_file_id', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lp_file_id'], ['generated_assets.id'], ),
    sa.ForeignKeyConstraint(['mps_file_id'], ['generated_assets.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['presentation_assessments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('tag')
    )
    op.create_table('workflow_project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('event', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['descriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['year'], ['main_config.year'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workflow_project', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workflow_project_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_workflow_project_user_id'), ['user_id'], unique=False)

    op.create_table('workflow_studentdata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('event', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['student_data.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['year'], ['main_config.year'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workflow_studentdata', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workflow_studentdata_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_workflow_studentdata_user_id'), ['user_id'], unique=False)

    op.create_table('match_balancing',
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['matching_attempts.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['matching_attempts.id'], ),
    sa.PrimaryKeyConstraint('child_id', 'parent_id')
    )
    op.create_table('match_config_markers',
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('marker_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['marker_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['matching_attempts.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'marker_id')
    )
    op.create_table('match_config_supervisors',
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('supervisor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['matching_attempts.id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['faculty_data.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'supervisor_id')
    )
    op.create_table('matching_enumerations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('enumeration', sa.Integer(), nullable=True),
    sa.Column('key', sa.Integer(), nullable=True),
    sa.Column('key2', sa.Integer(), nullable=True),
    sa.Column('matching_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['matching_id'], ['matching_attempts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_class_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('pclass_id', sa.Integer(), nullable=True),
    sa.Column('convenor_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('uses_supervisor', sa.Boolean(), nullable=True),
    sa.Column('uses_marker', sa.Boolean(), nullable=True),
    sa.Column('uses_moderator', sa.Boolean(), nullable=True),
    sa.Column('display_marker', sa.Boolean(), nullable=True),
    sa.Column('uses_presentations', sa.Boolean(), nullable=True),
    sa.Column('display_presentations', sa.Boolean(), nullable=True),
    sa.Column('use_project_hub', sa.Boolean(), nullable=True),
    sa.Column('canvas_module_id', sa.Integer(), nullable=True),
    sa.Column('canvas_login_id', sa.Integer(), nullable=True),
    sa.Column('requests_issued', sa.Boolean(), nullable=True),
    sa.Column('requests_issued_id', sa.Integer(), nullable=True),
    sa.Column('requests_timestamp', sa.DateTime(), nullable=True),
    sa.Column('request_deadline', sa.Date(), nullable=True),
    sa.Column('requests_skipped', sa.Boolean(), nullable=True),
    sa.Column('requests_skipped_id', sa.Integer(), nullable=True),
    sa.Column('requests_skipped_timestamp', sa.DateTime(), nullable=True),
    sa.Column('live', sa.Boolean(), nullable=True),
    sa.Column('golive_id', sa.Integer(), nullable=True),
    sa.Column('golive_timestamp', sa.DateTime(), nullable=True),
    sa.Column('live_deadline', sa.Date(), nullable=True),
    sa.Column('accommodate_matching_id', sa.Integer(), nullable=True),
    sa.Column('full_CATS', sa.Integer(), nullable=True),
    sa.Column('selection_closed', sa.Boolean(), nullable=True),
    sa.Column('closed_id', sa.Integer(), nullable=True),
    sa.Column('closed_timestamp', sa.DateTime(), nullable=True),
    sa.Column('submission_period', sa.Integer(), nullable=True),
    sa.Column('skip_matching', sa.Boolean(), nullable=True),
    sa.Column('CATS_supervision', sa.Integer(), nullable=True),
    sa.Column('CATS_marking', sa.Integer(), nullable=True),
    sa.Column('CATS_moderation', sa.Integer(), nullable=True),
    sa.Column('CATS_presentation', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accommodate_matching_id'], ['matching_attempts.id'], ),
    sa.ForeignKeyConstraint(['canvas_login_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['closed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['convenor_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['golive_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['pclass_id'], ['project_classes.id'], ),
    sa.ForeignKeyConstraint(['requests_issued_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requests_skipped_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['year'], ['main_config.year'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedule_enumerations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('enumeration', sa.Integer(), nullable=True),
    sa.Column('key', sa.Integer(), nullable=True),
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['schedule_id'], ['scheduling_attempts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedule_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('occupancy_label', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['scheduling_attempts.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['presentation_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('canvas_student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=255, collation='utf8_bin'), nullable=False),
    sa.Column('first_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('last_name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('canvas_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('convenor_generic_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('repeat', sa.Boolean(), nullable=True),
    sa.Column('repeat_interval', sa.Integer(), nullable=True),
    sa.Column('repeat_frequency', sa.Integer(), nullable=True),
    sa.Column('repeat_from_due_date', sa.Integer(), nullable=True),
    sa.Column('rollover', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['convenor_tasks.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['project_class_config.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faculty_to_slots',
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['slot_id'], ['schedule_slots.id'], ),
    sa.PrimaryKeyConstraint('faculty_id', 'slot_id')
    )
    op.create_table('filters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('go_live_confirmation',
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('pclass_config_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['pclass_config_id'], ['project_class_config.id'], ),
    sa.PrimaryKeyConstraint('faculty_id', 'pclass_config_id')
    )
    op.create_table('golive_emails',
    sa.Column('config_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('config_id', 'user_id')
    )
    op.create_table('live_projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.Column('page_views', sa.Integer(), nullable=True),
    sa.Column('last_view', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('generic', sa.Boolean(), nullable=True),
    sa.Column('meeting_reqd', sa.Integer(), nullable=True),
    sa.Column('enforce_capacity', sa.Boolean(), nullable=True),
    sa.Column('dont_clash_presentations', sa.Boolean(), nullable=True),
    sa.Column('show_popularity', sa.Boolean(), nullable=True),
    sa.Column('show_selections', sa.Boolean(), nullable=True),
    sa.Column('show_bookmarks', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reading', sa.Text(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('aims', sa.Text(), nullable=True),
    sa.Column('review_only', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['research_groups.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('live_projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_live_projects_group_id'), ['group_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_live_projects_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_live_projects_owner_id'), ['owner_id'], unique=False)

    op.create_table('match_configs',
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('config_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['matching_attempts.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'config_id')
    )
    op.create_table('orig_fac_to_slots',
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['slot_id'], ['schedule_slots.id'], ),
    sa.PrimaryKeyConstraint('faculty_id', 'slot_id')
    )
    op.create_table('selecting_students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('retired', sa.Boolean(), nullable=True),
    sa.Column('convert_to_submitter', sa.Boolean(), nullable=True),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('submission_time', sa.DateTime(), nullable=True),
    sa.Column('submission_IP', sa.String(length=60), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('selecting_students', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_selecting_students_retired'), ['retired'], unique=False)

    op.create_table('submission_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.Column('submission_period', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('hand_in_date', sa.Date(), nullable=True),
    sa.Column('name', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('number_markers', sa.Integer(), nullable=True),
    sa.Column('number_moderators', sa.Integer(), nullable=True),
    sa.Column('has_presentation', sa.Boolean(), nullable=True),
    sa.Column('lecture_capture', sa.Boolean(), nullable=True),
    sa.Column('number_assessors', sa.Integer(), nullable=True),
    sa.Column('max_group_size', sa.Integer(), nullable=True),
    sa.Column('morning_session', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('afternoon_session', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('talk_format', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('collect_presentation_feedback', sa.Boolean(), nullable=True),
    sa.Column('collect_project_feedback', sa.Boolean(), nullable=True),
    sa.Column('retired', sa.Boolean(), nullable=True),
    sa.Column('feedback_open', sa.Boolean(), nullable=True),
    sa.Column('feedback_id', sa.Integer(), nullable=True),
    sa.Column('feedback_timestamp', sa.DateTime(), nullable=True),
    sa.Column('feedback_deadline', sa.DateTime(), nullable=True),
    sa.Column('closed', sa.Boolean(), nullable=True),
    sa.Column('closed_id', sa.Integer(), nullable=True),
    sa.Column('closed_timestamp', sa.DateTime(), nullable=True),
    sa.Column('canvas_module_id', sa.Integer(), nullable=True),
    sa.Column('canvas_assignment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['closed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['feedback_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('submission_periods', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_submission_periods_retired'), ['retired'], unique=False)
        batch_op.create_index(batch_op.f('ix_submission_periods_submission_period'), ['submission_period'], unique=False)

    op.create_table('assessment_to_periods',
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['presentation_assessments.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['submission_periods.id'], ),
    sa.PrimaryKeyConstraint('assessment_id', 'period_id')
    )
    op.create_table('bookmarks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('liveproject_id', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['liveproject_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['selecting_students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('confirm_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('viewed', sa.Boolean(), nullable=True),
    sa.Column('request_timestamp', sa.DateTime(), nullable=True),
    sa.Column('response_timestamp', sa.DateTime(), nullable=True),
    sa.Column('decline_justification', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['selecting_students.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('convenor_group_filters',
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('research_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['filters.id'], ),
    sa.ForeignKeyConstraint(['research_group_id'], ['research_groups.id'], ),
    sa.PrimaryKeyConstraint('owner_id', 'research_group_id')
    )
    op.create_table('convenor_selector_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['convenor_tasks.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['selecting_students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('convenor_tskill_filters',
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['filters.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['transferable_skills.id'], ),
    sa.PrimaryKeyConstraint('owner_id', 'skill_id')
    )
    op.create_table('custom_offers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('liveproject_id', sa.Integer(), nullable=True),
    sa.Column('selector_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['liveproject_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['selector_id'], ['selecting_students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('live_project_to_assessors',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'faculty_id')
    )
    op.create_table('live_project_to_modules',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'module_id')
    )
    op.create_table('live_project_to_programmes',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('programme_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['programme_id'], ['degree_programmes.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'programme_id')
    )
    op.create_table('live_project_to_skills',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['transferable_skills.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'skill_id')
    )
    op.create_table('live_project_to_supervision',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('supervisor.id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['supervisor.id'], ['supervision_team.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'supervisor.id')
    )
    op.create_table('live_project_to_supervisors',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'faculty_id')
    )
    op.create_table('live_project_to_tags',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['project_tags.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'tag_id')
    )
    op.create_table('match_config_projects',
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['matching_attempts.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'project_id')
    )
    op.create_table('matching_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('matching_id', sa.Integer(), nullable=True),
    sa.Column('selector_id', sa.Integer(), nullable=True),
    sa.Column('submission_period', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('original_project_id', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('marker_id', sa.Integer(), nullable=True),
    sa.Column('original_marker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['marker_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['matching_id'], ['matching_attempts.id'], ),
    sa.ForeignKeyConstraint(['original_marker_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['original_project_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['selector_id'], ['selecting_students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('period_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('attachment_id', sa.Integer(), nullable=True),
    sa.Column('publish_to_students', sa.Boolean(), nullable=True),
    sa.Column('include_marker_emails', sa.Boolean(), nullable=True),
    sa.Column('include_supervisor_emails', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rank_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['attachment_id'], ['submitted_assets.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['submission_periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('popularity_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('liveproject_id', sa.Integer(), nullable=True),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.Column('datestamp', sa.DateTime(), nullable=True),
    sa.Column('uuid', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('total_number', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('score_rank', sa.Integer(), nullable=True),
    sa.Column('lowest_score_rank', sa.Integer(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('views_rank', sa.Integer(), nullable=True),
    sa.Column('bookmarks', sa.Integer(), nullable=True),
    sa.Column('bookmarks_rank', sa.Integer(), nullable=True),
    sa.Column('selections', sa.Integer(), nullable=True),
    sa.Column('selections_rank', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['liveproject_id'], ['live_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('popularity_record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_popularity_record_datestamp'), ['datestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_popularity_record_uuid'), ['uuid'], unique=False)

    op.create_table('sel_group_filters',
    sa.Column('selector_id', sa.Integer(), nullable=False),
    sa.Column('research_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['research_group_id'], ['research_groups.id'], ),
    sa.ForeignKeyConstraint(['selector_id'], ['selecting_students.id'], ),
    sa.PrimaryKeyConstraint('selector_id', 'research_group_id')
    )
    op.create_table('sel_tskill_filters',
    sa.Column('selector_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['selector_id'], ['selecting_students.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['transferable_skills.id'], ),
    sa.PrimaryKeyConstraint('selector_id', 'skill_id')
    )
    op.create_table('selections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('liveproject_id', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('converted_from_bookmark', sa.Boolean(), nullable=True),
    sa.Column('hint', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['liveproject_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['selecting_students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submitter_convenor_articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['formatted_articles.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['submission_periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submitting_students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('retired', sa.Boolean(), nullable=True),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('selector_id', sa.Integer(), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('canvas_user_id', sa.Integer(), nullable=True),
    sa.Column('canvas_missing', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['project_class_config.id'], ),
    sa.ForeignKeyConstraint(['selector_id'], ['selecting_students.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('submitting_students', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_submitting_students_retired'), ['retired'], unique=False)

    op.create_table('convenor_submitter_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['convenor_tasks.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['submitting_students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matching_to_roles',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['matching_records.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['matching_roles.id'], ),
    sa.PrimaryKeyConstraint('record_id', 'role_id')
    )
    op.create_table('matching_to_roles_original',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['matching_records.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['matching_roles.id'], ),
    sa.PrimaryKeyConstraint('record_id', 'role_id')
    )
    op.create_table('submission_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=True),
    sa.Column('retired', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('selection_config_id', sa.Integer(), nullable=True),
    sa.Column('matching_record_id', sa.Integer(), nullable=True),
    sa.Column('use_project_hub', sa.Boolean(), nullable=True),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('processed_report_id', sa.Integer(), nullable=True),
    sa.Column('celery_started', sa.Boolean(), nullable=True),
    sa.Column('celery_finished', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('report_exemplar', sa.Boolean(), nullable=True),
    sa.Column('canvas_submission_available', sa.Boolean(), nullable=True),
    sa.Column('turnitin_outcome', sa.String(length=255, collation='utf8_bin'), nullable=True),
    sa.Column('turnitin_score', sa.Integer(), nullable=True),
    sa.Column('turnitin_web_overlap', sa.Integer(), nullable=True),
    sa.Column('turnitin_publication_overlap', sa.Integer(), nullable=True),
    sa.Column('turnitin_student_overlap', sa.Integer(), nullable=True),
    sa.Column('student_engaged', sa.Boolean(), nullable=True),
    sa.Column('student_feedback', sa.Text(), nullable=True),
    sa.Column('student_feedback_submitted', sa.Boolean(), nullable=True),
    sa.Column('student_feedback_timestamp', sa.DateTime(), nullable=True),
    sa.Column('feedback_sent', sa.Boolean(), nullable=True),
    sa.Column('feedback_push_id', sa.Integer(), nullable=True),
    sa.Column('feedback_push_timestamp', sa.DateTime(), nullable=True),
    sa.Column('marker_id', sa.Integer(), nullable=True),
    sa.Column('email_to_supervisor', sa.Boolean(), nullable=True),
    sa.Column('email_to_marker', sa.Boolean(), nullable=True),
    sa.Column('supervisor_positive', sa.Text(), nullable=True),
    sa.Column('supervisor_negative', sa.Text(), nullable=True),
    sa.Column('supervisor_submitted', sa.Boolean(), nullable=True),
    sa.Column('supervisor_timestamp', sa.DateTime(), nullable=True),
    sa.Column('marker_positive', sa.Text(), nullable=True),
    sa.Column('marker_negative', sa.Text(), nullable=True),
    sa.Column('marker_submitted', sa.Boolean(), nullable=True),
    sa.Column('marker_timestamp', sa.DateTime(), nullable=True),
    sa.Column('acknowledge_feedback', sa.Boolean(), nullable=True),
    sa.Column('faculty_response', sa.Text(), nullable=True),
    sa.Column('faculty_response_submitted', sa.Boolean(), nullable=True),
    sa.Column('faculty_response_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['feedback_push_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['marker_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['matching_record_id'], ['matching_records.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['submitting_students.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['submission_periods.id'], ),
    sa.ForeignKeyConstraint(['processed_report_id'], ['generated_assets.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['live_projects.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['submitted_assets.id'], ),
    sa.ForeignKeyConstraint(['selection_config_id'], ['project_class_config.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('submission_records', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_submission_records_retired'), ['retired'], unique=False)

    op.create_table('orig_sub_to_slots',
    sa.Column('submitter_id', sa.Integer(), nullable=False),
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['slot_id'], ['schedule_slots.id'], ),
    sa.ForeignKeyConstraint(['submitter_id'], ['submission_records.id'], ),
    sa.PrimaryKeyConstraint('submitter_id', 'slot_id')
    )
    op.create_table('presentation_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('assessor_id', sa.Integer(), nullable=True),
    sa.Column('positive', sa.Text(), nullable=True),
    sa.Column('negative', sa.Text(), nullable=True),
    sa.Column('submitted', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assessor_id'], ['faculty_data.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['submission_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_hub_layout',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('serialized_layout', sa.String(length=2048, collation='utf8_bin'), nullable=True),
    sa.Column('timestamp', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['submission_records.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submission_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('attachment_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('publish_to_students', sa.Boolean(), nullable=True),
    sa.Column('include_marker_emails', sa.Boolean(), nullable=True),
    sa.Column('include_supervisor_emails', sa.Boolean(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['attachment_id'], ['submitted_assets.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['submission_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submission_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=False),
    sa.Column('marking_email', sa.Boolean(), nullable=True),
    sa.Column('positive_feedback', sa.Text(), nullable=True),
    sa.Column('improvements_feedback', sa.Text(), nullable=True),
    sa.Column('submitted_feedback', sa.Boolean(), nullable=True),
    sa.Column('feedback_timestamp', sa.DateTime(), nullable=True),
    sa.Column('acknowledge_student', sa.Boolean(), nullable=True),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('submitted_response', sa.Boolean(), nullable=True),
    sa.Column('response_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_edit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('last_edit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_edit_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submission_records.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submitter_attendance_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submitter_id', sa.Integer(), nullable=True),
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('attending', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['presentation_assessments.id'], ),
    sa.ForeignKeyConstraint(['submitter_id'], ['submission_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submitter_project_articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['formatted_articles.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['submission_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submitter_to_slots',
    sa.Column('submitter_id', sa.Integer(), nullable=False),
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['slot_id'], ['schedule_slots.id'], ),
    sa.ForeignKeyConstraint(['submitter_id'], ['submission_records.id'], ),
    sa.PrimaryKeyConstraint('submitter_id', 'slot_id')
    )
    op.create_table('submitter_available',
    sa.Column('submitter_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['presentation_sessions.id'], ),
    sa.ForeignKeyConstraint(['submitter_id'], ['submitter_attendance_data.id'], ),
    sa.PrimaryKeyConstraint('submitter_id', 'session_id')
    )
    op.create_table('submitter_unavailable',
    sa.Column('submitter_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['presentation_sessions.id'], ),
    sa.ForeignKeyConstraint(['submitter_id'], ['submitter_attendance_data.id'], ),
    sa.PrimaryKeyConstraint('submitter_id', 'session_id')
    )
    # ### end Alembic commands ###

    # create Foreign Key reference from 'users' into 'asset_licenses'
    # we need to do this by hand because the foreign key link is marked use_later=True to break a
    # dependency cycle in SQLAlchemy
    # (in principle SQLAlchemy can handle a lot of these cycles internally, but this seems to be one
    # that it can't)
    op.create_foreign_key('users_ibfk_1', 'users', 'asset_licenses',
                          ['default_license_id'], ['id'])

    # same with foreign key reference from 'projects' into 'descriptions'
    op.create_foreign_key('projects_ibfk_5', 'projects', 'descriptions',
                          ['default_id'], ['id'])


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('submitter_unavailable')
    op.drop_table('submitter_available')
    op.drop_table('submitter_to_slots')
    op.drop_table('submitter_project_articles')
    op.drop_table('submitter_attendance_data')
    op.drop_table('submission_roles')
    op.drop_table('submission_attachments')
    op.drop_table('project_hub_layout')
    op.drop_table('presentation_feedback')
    op.drop_table('orig_sub_to_slots')
    with op.batch_alter_table('submission_records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_submission_records_retired'))

    op.drop_table('submission_records')
    op.drop_table('matching_to_roles_original')
    op.drop_table('matching_to_roles')
    op.drop_table('convenor_submitter_tasks')
    with op.batch_alter_table('submitting_students', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_submitting_students_retired'))

    op.drop_table('submitting_students')
    op.drop_table('submitter_convenor_articles')
    op.drop_table('selections')
    op.drop_table('sel_tskill_filters')
    op.drop_table('sel_group_filters')
    with op.batch_alter_table('popularity_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_popularity_record_uuid'))
        batch_op.drop_index(batch_op.f('ix_popularity_record_datestamp'))

    op.drop_table('popularity_record')
    op.drop_table('period_attachments')
    op.drop_table('matching_records')
    op.drop_table('match_config_projects')
    op.drop_table('live_project_to_tags')
    op.drop_table('live_project_to_supervisors')
    op.drop_table('live_project_to_supervision')
    op.drop_table('live_project_to_skills')
    op.drop_table('live_project_to_programmes')
    op.drop_table('live_project_to_modules')
    op.drop_table('live_project_to_assessors')
    op.drop_table('custom_offers')
    op.drop_table('convenor_tskill_filters')
    op.drop_table('convenor_selector_tasks')
    op.drop_table('convenor_group_filters')
    op.drop_table('confirm_requests')
    op.drop_table('bookmarks')
    op.drop_table('assessment_to_periods')
    with op.batch_alter_table('submission_periods', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_submission_periods_submission_period'))
        batch_op.drop_index(batch_op.f('ix_submission_periods_retired'))

    op.drop_table('submission_periods')
    with op.batch_alter_table('selecting_students', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_selecting_students_retired'))

    op.drop_table('selecting_students')
    op.drop_table('orig_fac_to_slots')
    op.drop_table('match_configs')
    with op.batch_alter_table('live_projects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_live_projects_owner_id'))
        batch_op.drop_index(batch_op.f('ix_live_projects_name'))
        batch_op.drop_index(batch_op.f('ix_live_projects_group_id'))

    op.drop_table('live_projects')
    op.drop_table('golive_emails')
    op.drop_table('go_live_confirmation')
    op.drop_table('filters')
    op.drop_table('faculty_to_slots')
    op.drop_table('convenor_generic_tasks')
    op.drop_table('canvas_student')
    op.drop_table('schedule_slots')
    op.drop_table('schedule_enumerations')
    op.drop_table('project_class_config')
    op.drop_table('matching_enumerations')
    op.drop_table('match_config_supervisors')
    op.drop_table('match_config_markers')
    op.drop_table('match_balancing')
    with op.batch_alter_table('workflow_studentdata', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workflow_studentdata_user_id'))
        batch_op.drop_index(batch_op.f('ix_workflow_studentdata_timestamp'))

    op.drop_table('workflow_studentdata')
    with op.batch_alter_table('workflow_project', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workflow_project_user_id'))
        batch_op.drop_index(batch_op.f('ix_workflow_project_timestamp'))

    op.drop_table('workflow_project')
    op.drop_table('scheduling_attempts')
    op.drop_table('matching_attempts')
    with op.batch_alter_table('generated_downloads', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_generated_downloads_timestamp'))

    op.drop_table('generated_downloads')
    op.drop_table('description_to_supervisors')
    op.drop_table('description_to_pclasses')
    op.drop_table('description_to_modules')
    with op.batch_alter_table('description_comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_description_comments_creation_timestamp'))

    op.drop_table('description_comments')
    op.drop_table('batch_student_items')
    op.drop_table('acr_generated')
    op.drop_table('acl_generated')
    with op.batch_alter_table('submitted_downloads', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_submitted_downloads_timestamp'))

    op.drop_table('submitted_downloads')
    with op.batch_alter_table('student_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_data_cohort'))

    op.drop_table('student_data')
    op.drop_table('session_to_rooms')
    op.drop_table('project_to_tags')
    op.drop_table('project_to_supervisors')
    op.drop_table('project_to_skills')
    op.drop_table('project_to_programmes')
    op.drop_table('project_to_classes')
    op.drop_table('project_to_assessors')
    op.drop_table('project_class_to_programmes')
    op.drop_table('project_class_to_messages')
    op.drop_table('project_class_coconvenors')
    op.drop_table('programmes_to_modules')
    op.drop_table('period_definitions')
    op.drop_table('office_contacts')
    with op.batch_alter_table('last_view_projects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_last_view_projects_last_viewed'))

    op.drop_table('last_view_projects')
    with op.batch_alter_table('generated_assets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_generated_assets_timestamp'))

    op.drop_table('generated_assets')
    op.drop_table('force_tag_groups')
    with op.batch_alter_table('enrollment_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_enrollment_record_supervisor_state'))
        batch_op.drop_index(batch_op.f('ix_enrollment_record_presentations_state'))
        batch_op.drop_index(batch_op.f('ix_enrollment_record_moderator_state'))
        batch_op.drop_index(batch_op.f('ix_enrollment_record_marker_state'))

    op.drop_table('enrollment_record')
    op.drop_table('descriptions')
    op.drop_table('assessor_unavailable')
    op.drop_table('assessor_ifneeded')
    op.drop_table('assessor_available')
    op.drop_table('approvals_team')
    op.drop_table('acr_submitted')
    op.drop_table('acl_submitted')
    with op.batch_alter_table('transferable_skills', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transferable_skills_name'))

    op.drop_table('transferable_skills')
    with op.batch_alter_table('submitted_assets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_submitted_assets_timestamp'))

    op.drop_table('submitted_assets')
    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rooms_name'))

    op.drop_table('rooms')
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_projects_owner_id'))
        batch_op.drop_index(batch_op.f('ix_projects_name'))
        batch_op.drop_index(batch_op.f('ix_projects_group_id'))

    op.drop_table('projects')
    op.drop_table('project_tags')
    with op.batch_alter_table('project_classes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_classes_name'))
        batch_op.drop_index(batch_op.f('ix_project_classes_convenor_id'))
        batch_op.drop_index(batch_op.f('ix_project_classes_abbreviation'))

    op.drop_table('project_classes')
    op.drop_table('presentation_sessions')
    with op.batch_alter_table('modules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_modules_code'))

    op.drop_table('modules')
    op.drop_table('message_dismissals')
    op.drop_table('faculty_affiliations')
    with op.batch_alter_table('degree_programmes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_degree_programmes_type_id'))
        batch_op.drop_index(batch_op.f('ix_degree_programmes_name'))
        batch_op.drop_index(batch_op.f('ix_degree_programmes_course_code'))
        batch_op.drop_index(batch_op.f('ix_degree_programmes_abbreviation'))

    op.drop_table('degree_programmes')
    op.drop_table('assessor_attendance_data')
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tasks_name'))

    op.drop_table('tasks')
    with op.batch_alter_table('supervision_team', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_supervision_team_abbreviation'))

    op.drop_table('supervision_team')
    with op.batch_alter_table('skill_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_skill_groups_name'))

    op.drop_table('skill_groups')
    op.drop_table('roles_users_masked')
    op.drop_table('roles_users')
    with op.batch_alter_table('research_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_research_groups_abbreviation'))

    op.drop_table('research_groups')
    op.drop_table('project_tag_groups')
    op.drop_table('presentation_assessments')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_uuid'))
        batch_op.drop_index(batch_op.f('ix_notifications_timestamp'))

    op.drop_table('notifications')
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_messages_issue_date'))

    op.drop_table('messages')
    op.drop_table('matching_roles')
    op.drop_table('formatted_articles')
    op.drop_table('fheq_levels')
    op.drop_table('faculty_data')
    op.drop_table('email_notifications')
    op.drop_table('email_log_recipients')
    with op.batch_alter_table('degree_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_degree_types_name'))
        batch_op.drop_index(batch_op.f('ix_degree_types_abbreviation'))

    op.drop_table('degree_types')
    with op.batch_alter_table('convenor_tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_convenor_tasks_due_date'))
        batch_op.drop_index(batch_op.f('ix_convenor_tasks_defer_date'))

    op.drop_table('convenor_tasks')
    op.drop_table('celery_schedules')
    with op.batch_alter_table('buildings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_buildings_name'))

    op.drop_table('buildings')
    with op.batch_alter_table('backups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backups_date'))

    op.drop_table('backups')
    op.drop_table('asset_licenses')
    op.drop_table('acr_temporary')
    op.drop_table('acl_temporary')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_last_name'))
        batch_op.drop_index(batch_op.f('ix_users_first_name'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('temporary_assets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_temporary_assets_timestamp'))

    op.drop_table('temporary_assets')
    op.drop_table('roles')
    op.drop_table('main_config')
    with op.batch_alter_table('email_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_email_log_send_date'))

    op.drop_table('email_log')
    op.drop_table('celery_intervals')
    op.drop_table('celery_crontabs')
    with op.batch_alter_table('batch_student', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_batch_student_name'))

    op.drop_table('batch_student')
    op.drop_table('backup_config')
    # ### end Alembic commands ###
